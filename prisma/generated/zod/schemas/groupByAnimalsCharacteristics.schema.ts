import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { AnimalsCharacteristicsWhereInputObjectSchema as AnimalsCharacteristicsWhereInputObjectSchema } from './objects/AnimalsCharacteristicsWhereInput.schema';
import { AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema as AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema } from './objects/AnimalsCharacteristicsOrderByWithAggregationInput.schema';
import { AnimalsCharacteristicsScalarWhereWithAggregatesInputObjectSchema as AnimalsCharacteristicsScalarWhereWithAggregatesInputObjectSchema } from './objects/AnimalsCharacteristicsScalarWhereWithAggregatesInput.schema';
import { AnimalsCharacteristicsScalarFieldEnumSchema } from './enums/AnimalsCharacteristicsScalarFieldEnum.schema';
import { AnimalsCharacteristicsCountAggregateInputObjectSchema as AnimalsCharacteristicsCountAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsCountAggregateInput.schema';
import { AnimalsCharacteristicsMinAggregateInputObjectSchema as AnimalsCharacteristicsMinAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsMinAggregateInput.schema';
import { AnimalsCharacteristicsMaxAggregateInputObjectSchema as AnimalsCharacteristicsMaxAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsMaxAggregateInput.schema';
import { AnimalsCharacteristicsAvgAggregateInputObjectSchema as AnimalsCharacteristicsAvgAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsAvgAggregateInput.schema';
import { AnimalsCharacteristicsSumAggregateInputObjectSchema as AnimalsCharacteristicsSumAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsSumAggregateInput.schema';

export const AnimalsCharacteristicsGroupBySchema: z.ZodType<Prisma.AnimalsCharacteristicsGroupByArgs> = z.object({ where: AnimalsCharacteristicsWhereInputObjectSchema.optional(), orderBy: z.union([AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema, AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AnimalsCharacteristicsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AnimalsCharacteristicsScalarFieldEnumSchema), _count: z.union([ z.literal(true), AnimalsCharacteristicsCountAggregateInputObjectSchema ]).optional(), _min: AnimalsCharacteristicsMinAggregateInputObjectSchema.optional(), _max: AnimalsCharacteristicsMaxAggregateInputObjectSchema.optional(), _avg: AnimalsCharacteristicsAvgAggregateInputObjectSchema.optional(), _sum: AnimalsCharacteristicsSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AnimalsCharacteristicsGroupByArgs>;

export const AnimalsCharacteristicsGroupByZodSchema = z.object({ where: AnimalsCharacteristicsWhereInputObjectSchema.optional(), orderBy: z.union([AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema, AnimalsCharacteristicsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AnimalsCharacteristicsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AnimalsCharacteristicsScalarFieldEnumSchema), _count: z.union([ z.literal(true), AnimalsCharacteristicsCountAggregateInputObjectSchema ]).optional(), _min: AnimalsCharacteristicsMinAggregateInputObjectSchema.optional(), _max: AnimalsCharacteristicsMaxAggregateInputObjectSchema.optional(), _avg: AnimalsCharacteristicsAvgAggregateInputObjectSchema.optional(), _sum: AnimalsCharacteristicsSumAggregateInputObjectSchema.optional() }).strict();