import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { AnimalsCharacteristicsOrderByWithRelationInputObjectSchema as AnimalsCharacteristicsOrderByWithRelationInputObjectSchema } from './objects/AnimalsCharacteristicsOrderByWithRelationInput.schema';
import { AnimalsCharacteristicsWhereInputObjectSchema as AnimalsCharacteristicsWhereInputObjectSchema } from './objects/AnimalsCharacteristicsWhereInput.schema';
import { AnimalsCharacteristicsWhereUniqueInputObjectSchema as AnimalsCharacteristicsWhereUniqueInputObjectSchema } from './objects/AnimalsCharacteristicsWhereUniqueInput.schema';
import { AnimalsCharacteristicsCountAggregateInputObjectSchema as AnimalsCharacteristicsCountAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsCountAggregateInput.schema';
import { AnimalsCharacteristicsMinAggregateInputObjectSchema as AnimalsCharacteristicsMinAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsMinAggregateInput.schema';
import { AnimalsCharacteristicsMaxAggregateInputObjectSchema as AnimalsCharacteristicsMaxAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsMaxAggregateInput.schema';
import { AnimalsCharacteristicsAvgAggregateInputObjectSchema as AnimalsCharacteristicsAvgAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsAvgAggregateInput.schema';
import { AnimalsCharacteristicsSumAggregateInputObjectSchema as AnimalsCharacteristicsSumAggregateInputObjectSchema } from './objects/AnimalsCharacteristicsSumAggregateInput.schema';

export const AnimalsCharacteristicsAggregateSchema: z.ZodType<Prisma.AnimalsCharacteristicsAggregateArgs> = z.object({ orderBy: z.union([AnimalsCharacteristicsOrderByWithRelationInputObjectSchema, AnimalsCharacteristicsOrderByWithRelationInputObjectSchema.array()]).optional(), where: AnimalsCharacteristicsWhereInputObjectSchema.optional(), cursor: AnimalsCharacteristicsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), AnimalsCharacteristicsCountAggregateInputObjectSchema ]).optional(), _min: AnimalsCharacteristicsMinAggregateInputObjectSchema.optional(), _max: AnimalsCharacteristicsMaxAggregateInputObjectSchema.optional(), _avg: AnimalsCharacteristicsAvgAggregateInputObjectSchema.optional(), _sum: AnimalsCharacteristicsSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AnimalsCharacteristicsAggregateArgs>;

export const AnimalsCharacteristicsAggregateZodSchema = z.object({ orderBy: z.union([AnimalsCharacteristicsOrderByWithRelationInputObjectSchema, AnimalsCharacteristicsOrderByWithRelationInputObjectSchema.array()]).optional(), where: AnimalsCharacteristicsWhereInputObjectSchema.optional(), cursor: AnimalsCharacteristicsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), AnimalsCharacteristicsCountAggregateInputObjectSchema ]).optional(), _min: AnimalsCharacteristicsMinAggregateInputObjectSchema.optional(), _max: AnimalsCharacteristicsMaxAggregateInputObjectSchema.optional(), _avg: AnimalsCharacteristicsAvgAggregateInputObjectSchema.optional(), _sum: AnimalsCharacteristicsSumAggregateInputObjectSchema.optional() }).strict();